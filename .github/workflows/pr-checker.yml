name: PR-checker
on: 
  push:
  workflow_dispatch:

# This allows a subsequently queued workflow run to interrupt previous runs
concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true
jobs:
  # Job for public repo, upload artifacts
  # Run on larger number of OSes
  run_tox_pub:
    timeout-minutes: 10
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-22.04, ubuntu-20.04, windows-2022, windows-2019, macos-latest]
    runs-on: ${{ matrix.os }}
    if: github.repository == 'PelionIoT/manifest-tool'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - uses: actions/setup-python@v4
        with:
          python-version: '3.8'
      - run: python -m pip install wheel --user
      - run: python -m pip install --user tox
      - run: tox
      - uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist/*.whl

  # Job for internal repo, do not upload artifacts
  # Run with smaller set of OSes
  run_tox_internal:
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    timeout-minutes: 10
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-22.04, windows-2022]
    runs-on: ${{ matrix.os }}
    if: github.repository == 'PelionIoT/manifest-tool-internal'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - uses: actions/setup-python@v4
        with:
          python-version: '3.8'
      - run: python -m pip install wheel --user
      - run: |
          if: matrix.os == 'macos-latest'
          brew install tox
      - run: python -m pip install --user tox
      - run: tox

      - name: Integration with slack
        uses: act10ns/slack@v2
        with:
          status: ${{ job.status }}
          channel: '#testing_device'
        if: always()
